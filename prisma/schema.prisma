// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Currency {
  HNL
  USD
}

enum Type {
  INCOME
  EXPENSE
}

enum PaymentMethod {
  CASH
  CREDITCARD
  DEBITCARD
  TRANSFER
}

model Chat {
  id             Int        @id @default(autoincrement())
  chatId         BigInt     @unique
  fullName       String
  chatSubject    String
  chatSubSubject String[]
  chatHistory    String[]
  statement      Statement? @relation(fields: [statementId], references: [id])
  statementId    Int?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Transaction {
  id            Int           @id @default(autoincrement())
  amount        Float
  description   String
  date          DateTime
  category      Category      @relation(fields: [categoryId], references: [id])
  categoryId    Int
  notes         String?
  currency      Currency
  type          Type
  paymentMethod PaymentMethod
  attachmentUrl String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Category {
  id           Int           @id @default(autoincrement())
  description  String
  emoji        String
  transactions Transaction[]
  currency     Currency
  isFixed      Boolean
  isPaid       Boolean       @default(false)
  notes        String?
  limit        Float
  statement    Statement     @relation(fields: [statementId], references: [id])
  statementId  Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Statement {
  id          Int        @id @default(autoincrement())
  month       Int
  year        Int
  chat        Chat[]
  incomes     Income[]
  categories  Category[]
  dollarToHNL Float      @default(24.6)
  hnlToDollar Float      @default(0.04)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Income {
  id          Int       @id @default(autoincrement())
  source      String
  amount      Float
  currency    Currency
  statement   Statement @relation(fields: [statementId], references: [id])
  statementId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
